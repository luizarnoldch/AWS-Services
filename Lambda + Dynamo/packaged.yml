AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: "Un ejemplo de SAM para una funci\xC3\xB3n Lambda y DynamoDB con la pol\xC3\
  \xADtica DynamoDBCrudPolicy."
Resources:
  InsertTable:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://amazon-connect-31732095774d/2700790db65a89b37fa537933311ecbf
      Handler: main
      Runtime: go1.x
      Timeout: 8
      Environment:
        Variables:
          TABLE_NAME:
            Ref: MyTable
      Role:
        Fn::GetAtt:
        - InsertTableRole
        - Arn
    Metadata:
      SamResourceId: InsertTable
  InsertTableRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: InsertTablePolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - dynamodb:PutItem
            Resource:
              Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${MyTable}
    Metadata:
      SamResourceId: InsertTableRole
  ReadTable:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://amazon-connect-31732095774d/4c33ad3084ca7345ee8ab7c125a126e6
      Handler: main
      Runtime: go1.x
      Timeout: 8
      Environment:
        Variables:
          TABLE_NAME:
            Ref: MyTable
      Role:
        Fn::GetAtt:
        - ReadTableRole
        - Arn
    Metadata:
      SamResourceId: ReadTable
  ReadTableRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: ReadTablePolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - dynamodb:GetItem
            - dynamodb:Scan
            - dynamodb:Query
            Resource:
              Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${MyTable}
    Metadata:
      SamResourceId: ReadTableRole
  UpdateTable:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://amazon-connect-31732095774d/46e0ee8c7754e0187c38a1f4f09696d6
      Handler: main
      Runtime: go1.x
      Timeout: 8
      Environment:
        Variables:
          TABLE_NAME:
            Ref: MyTable
      Role:
        Fn::GetAtt:
        - UpdateTableRole
        - Arn
    Metadata:
      SamResourceId: UpdateTable
  UpdateTableRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: UpdateTablePolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - dynamodb:UpdateItem
            Resource:
              Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${MyTable}
    Metadata:
      SamResourceId: UpdateTableRole
  DeleteTable:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://amazon-connect-31732095774d/7fb14a9d5a13da473a3d8a06752cd78c
      Handler: main
      Runtime: go1.x
      Timeout: 8
      Environment:
        Variables:
          TABLE_NAME:
            Ref: MyTable
      Role:
        Fn::GetAtt:
        - DeleteTableRole
        - Arn
    Metadata:
      SamResourceId: DeleteTable
  DeleteTableRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: DeleteTablePolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - dynamodb:DeleteItem
            Resource:
              Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${MyTable}
    Metadata:
      SamResourceId: DeleteTableRole
  MyTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: ID
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
    Metadata:
      SamResourceId: MyTable
